{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/all-videos-list/all-videos-list.component.ts","./src/app/components/all-videos-list/all-videos-list.component.html","./src/app/components/file-upload/file-upload.component.ts","./src/app/components/file-upload/file-upload.component.html","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/new-video/new-video.component.ts","./src/app/components/new-video/new-video.component.html","./src/app/components/sidebar/sidebar.component.ts","./src/app/components/sidebar/sidebar.component.html","./src/app/components/video-stream-http/video-stream-http.component.ts","./src/app/components/video-stream-http/video-stream-http.component.html","./src/app/components/video-stream/video-stream.component.ts","./src/app/components/video-stream/video-stream.component.html","./src/app/shared/core.module.ts","./src/app/shared/services/app.service.ts","./src/app/utils/upload-file-validators.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AllVideosListComponent } from './components/all-videos-list/all-videos-list.component';\nimport { NewVideoComponent } from './components/new-video/new-video.component';\n\nconst routes: Routes = [\n  { path: '', component: AllVideosListComponent },\n  { path: 'videoslist', component: AllVideosListComponent },\n  { path: 'new-video', component: NewVideoComponent },\n  { path: 'en', redirectTo: '' },\n  { path: '**', redirectTo: '' },\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n    }),\n  ],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AppService } from './shared/services/app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  user: any;\n  title = \"Video-Store\";\n  activeRoute: string = \"/videoslist\";\n\n  subMenus: any = {\n    \"/\": \"Video-Store\",\n    \"/videoslist\": \"Video-Store\",\n    \"/new-video\": \"New Video\"\n  }\n\n\n  constructor(private appService: AppService, private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        console.log(event.url);\n        this.activeRoute = event.url;\n          this.title = this.subMenus[`${event.url}`];\n      }\n    });\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<app-header [title]=\"title\" class=\"web-header\"></app-header>\n<app-sidebar class=\"web-sidebar\"></app-sidebar>\n<div class=\"app-container\">\n  <router-outlet></router-outlet>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CoreModule } from './shared/core.module';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCommonModule } from '@angular/material/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MatSelectModule } from '@angular/material/select';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HeaderComponent } from './components/header/header.component';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { AllVideosListComponent } from './components/all-videos-list/all-videos-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AsyncPipe } from '@angular/common';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { NewVideoComponent } from './components/new-video/new-video.component';\nimport { VideoStreamComponent } from './components/video-stream/video-stream.component';\nimport { VideoStreamHttpComponent } from './components/video-stream-http/video-stream-http.component';\nimport { FileUploadComponent } from './components/file-upload/file-upload.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    AllVideosListComponent,\n    SidebarComponent,\n    NewVideoComponent,\n    VideoStreamComponent,\n    VideoStreamHttpComponent,\n    FileUploadComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatButtonModule,\n    AppRoutingModule,\n    MatInputModule,\n    MatTableModule,\n    AppRoutingModule,\n    HttpClientModule,\n    CoreModule,\n    FormsModule,\n    MatRadioModule,\n    MatButtonModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatInputModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatIconModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatSnackBarModule,\n    MatProgressSpinnerModule,\n    MatTooltipModule,\n    MatDialogModule,\n    MatButtonToggleModule,\n    MatToolbarModule,\n    MatSidenavModule,\n    CdkTableModule,\n    MatCommonModule,\n    AsyncPipe,\n    MatNativeDateModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { AppService } from 'src/app/shared/services/app.service';\nimport { VideoStreamComponent } from '../video-stream/video-stream.component';\nimport { VideoStreamHttpComponent } from '../video-stream-http/video-stream-http.component';\n\n@Component({\n  selector: 'app-all-videos-list',\n  templateUrl: './all-videos-list.component.html',\n  styleUrls: ['./all-videos-list.component.scss']\n})\n\nexport class AllVideosListComponent {\n  stickyHeader: boolean = true;\n  displayedColumns: string[] = ['position', 'name', 'http', 'socket'];\n  dataSource: any;\n\n  constructor(private appService: AppService, private router: Router, public dialog: MatDialog) {\n\n  }\n\n  ngOnInit() {\n    this.appService.getFiles()\n      .subscribe((response: any) => {\n        console.log('response receved is ', response);\n        this.dataSource = new MatTableDataSource(response);\n      })\n  }\n\n\n  edit(id: any) {\n    this.router.navigateByUrl(`edit/alert/${id}`)\n      .then(() => {\n      })\n  }\n\n  selectedVideoUsingSocket(fileName: string) {\n    const selectedFileDailog = this.dialog.open(VideoStreamComponent, {\n      data: { fileName: fileName }\n    });\n\n    selectedFileDailog.afterClosed().subscribe(result => {\n    });\n  }\n\n  selectedVideoUsingHttp(fileName: string) {\n    const selectedFileDailog = this.dialog.open(VideoStreamHttpComponent, {\n      data: { fileName: fileName }\n    });\n\n    selectedFileDailog.afterClosed().subscribe(result => {\n    });\n  }\n\n}\n","<div class=\"main-box\">\n  <div class=\"app-all-datasets\">\n    <div class=\"header\">\n      <button routerLink=\"/new-video\" class=\"new-btn\"> + New Video</button>\n    </div>\n\n    <section style=\"overflow: auto\">\n\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef> No. </th>\n          <td mat-cell *matCellDef=\"let element; let i = index;\"> {{i+1}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef> Video Name</th>\n          <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"http\">\n          <th mat-header-cell *matHeaderCellDef>Http</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon (click)=\"selectedVideoUsingHttp(element.name)\" class=\"action\">smart_display</mat-icon> &nbsp;\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"socket\">\n          <th mat-header-cell *matHeaderCellDef>Socket</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <mat-icon (click)=\"selectedVideoUsingSocket(element.name)\" class=\"action\">smart_display</mat-icon> &nbsp;\n          </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: stickyHeader\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n      </table>\n\n    </section>\n  </div>\n</div>","import { Component, OnInit, Input, Output, EventEmitter, HostListener, ElementRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FileUploadComponent,\n      multi: true\n    }\n  ],\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements ControlValueAccessor {\n  onChange: Function;\n  public file: File | null = null;\n\n  @HostListener('change', ['$event.target.files']) emitFiles( event: FileList ) {\n    const file = event && event.item(0);\n    this.onChange(file);\n    this.file = file;\n  }\n\n  constructor( private host: ElementRef<HTMLInputElement> ) {\n  }\n\n  writeValue( value: null ) {\n    // clear file input\n    this.host.nativeElement.value = '';\n    this.file = null;\n  }\n\n  registerOnChange( fn: Function ) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched( fn: Function ) {\n  }\n\n}\n\n","<div class=\"file-drop-area\">\n    <span class=\"fake-btn\">Choose file</span>\n    <span class=\"file-msg\">{{file ? file.name : 'or drag and drop file here' }}</span>\n    <input class=\"file-input\" type=\"file\">\n  </div>\n  ","import { Component, Input, OnInit } from '@angular/core';\nimport {  Router } from '@angular/router';\nimport { AppService } from 'src/app/shared/services/app.service';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() title: string;\n\n  constructor(private router: Router, private appService: AppService) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n","<div id=\"app-header\" fxLayout=\"row\" fxLayoutAlign=\"start center\" class=\"mat-elevation-z4\">\n  <button class=\"title\">\n    {{title}}\n  </button>\n  <div style=\"flex: 1;\"></div>\n\n  <button mat-icon-button aria-label=\"Logout\" matTooltip=\"Logout\">\n    <mat-icon>logout</mat-icon>\n  </button>\n</div>","import { Component } from '@angular/core';\nimport { AppService } from 'src/app/shared/services/app.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { requiredFileType } from 'src/app/utils/upload-file-validators';\nimport { HttpEventType } from '@angular/common/http'\n\nimport { Router } from '@angular/router'\n\n@Component({\n  selector: 'app-new-video',\n  templateUrl: './new-video.component.html',\n  styleUrls: ['./new-video.component.scss']\n})\nexport class NewVideoComponent {\n  errorMessage: string;\n  errorMessageStatus: boolean = false;\n\n  constructor(private appService: AppService, private router: Router) {\n  }\n\n  form = new FormGroup({\n    file: new FormControl(null, [Validators.required, requiredFileType(['video/mp4'])])\n  });\n\n  ngOnInit() {\n\n  }\n\n  submit() {\n    this.errorMessageStatus = false;\n    this.appService.uploadFile(toFormData(this.form.value))\n      .subscribe((event: any) => {\n\n        if (event.type === HttpEventType.Response) {\n          console.log(event.body);\n          this.form.reset();\n          this.router.navigateByUrl('videoslist')\n            .then(() => {\n            })\n        }\n      },\n        ({ error }) => {\n          this.errorMessageStatus = true;\n          this.errorMessage = error\n          console.log(error);\n        })\n  }\n}\n\n\nexport function toFormData<T>(formValue: any) {\n  const formData = new FormData();\n\n  for (const key of Object.keys(formValue)) {\n    const value = formValue[key];\n    formData.append(key, value);\n  }\n  return formData;\n}","  <div class=\"main-box\">\n    <div class=\"title\">\n        <label>Upload Video (MP4 format, max 2MB):</label>\n    </div>\n    <div class=\"file-uploader\">\n        <form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n            <app-file-upload formControlName=\"file\"></app-file-upload>\n            <div class=\"error-message\" *ngIf=\"errorMessageStatus\">\n                <p>{{errorMessage}}</p>\n            </div>\n            <div class=\"submit\">\n                <button mat-raised-button type=\"submit\" color=\"primary\" >Upload</button>\n            </div>\n        </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { AppService } from 'src/app/shared/services/app.service';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  all_dataset: boolean = true;\n  activeRoute: any;\n  options: FormGroup;\n  Url: any;\n  mitData: any;\n\n  constructor(fb: FormBuilder, private appService: AppService, private route: ActivatedRoute, private router: Router) {\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.activeRoute = event.url;\n      }\n    })\n    this.options = fb.group({\n      bottom: 0,\n      fixed: false,\n      top: 0\n    });\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  isActiveMenu(menuIndex: number): any {\n    if (menuIndex == 0) {\n      return this.activeRoute == \"/videoslist\";\n    } \n  }\n\n}\n\n","<div class=\"split left\">\n  <div class=\"app-sidenav\">\n    <ul class=\"app-menu\">\n      <li routerLink=\"/videoslist\" [ngClass]=\"{active: isActiveMenu(0)}\">\n        <span class=\"material-symbols-outlined\">\n          home\n        </span>\n      </li>\n    </ul>\n  </div>\n</div>","import { Component, Inject, Optional,  } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AppService } from 'src/app/shared/services/app.service';\n\n@Component({\n  selector: 'app-video-stream-http',\n  templateUrl: './video-stream-http.component.html',\n  styleUrls: ['./video-stream-http.component.scss']\n})\nexport class VideoStreamHttpComponent {\n  fileName:string;\n\n  constructor( @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\n   private appService:AppService) {\n    this.fileName = `api/data/video/http/stream/${data.fileName}`;\n }\n}\n","<video [src]=\"fileName\" width=\"1080px\" controls autoplay></video>\n\n","import { Component, Inject, Optional, ViewChild, ElementRef } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { AppService } from 'src/app/shared/services/app.service';\nimport { io } from 'socket.io-client';\n\n@Component({\n  selector: 'app-video-stream',\n  templateUrl: './video-stream.component.html',\n  styleUrls: ['./video-stream.component.scss']\n})\nexport class VideoStreamComponent  {\n  socket:any;\n  fileName;\n\n  static readonly SOCKET_EVENT = {\n    VIDEO: \"video-stream\"\n  }\n  @ViewChild('videoPlayer') videoElementRef!: ElementRef<HTMLVideoElement>;\n  public showVideoPlayer = false;\n  private videoElement: HTMLVideoElement;\n  progress: number | undefined;\n\n  constructor( @Optional() @Inject(MAT_DIALOG_DATA) public data: any,\n   private appService:AppService) {\n    this.fileName = `api/data/video/socket/stream/${data.fileName}`\n    this.socket = io(window.origin);\n }\n\n ngAfterViewInit(): void {\n  this.socket.on('connect', () => {\n    console.log('Connected to server');\n  });\n\n  this.startStreaming();\n  this.socket.on('video-stream', (data: ArrayBuffer) => {\n    const videoBlob = new Blob([data], { type: 'video/mp4' });\n    const videoStream = URL.createObjectURL(videoBlob);\n    this.videoElementRef.nativeElement.src = videoStream;\n  });\n\n  this.socket.on('video-end', () => {\n    console.log('Video stream ended');\n    this.progress = undefined;\n  });\n\n  this.socket.on('disconnect', () => {\n    console.log('Disconnected from server');\n  });\n}\n\nstartStreaming() {\n  this.socket.emit('start-stream', this.data.fileName);\n}\n\n\nngOnDestroy() {\n  // Clean up the socket connection when the component is destroyed\n  this.socket.disconnect();\n}\n\n}\n","<video #videoPlayer width=\"1080px\" controls autoplay></video>\n\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\n\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    RouterModule\n  ],\n  exports: [\n    BrowserModule,\n    BrowserAnimationsModule\n  ],\n  providers: [\n  ]\n})\n\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    if (parentModule) {\n      throw new Error(`CoreModule has already been loaded. Import Core modules in the AppModule only.`);\n    }\n  }\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, map } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AppService {\n\n  constructor(private http: HttpClient) {}\n\n  getFiles() {\n    return this.http.get(`api/data/videoslist`)\n  }\n\n  uploadFile(data:object) {\n    return this.http.post(\"api/data/video/upload\", data, {\n      reportProgress: true,\n      observe: 'events'\n    })\n  }\n\n  getFile(id:string) {\n    return this.http.get(`api/data/video/stream/${id}`)\n  }\n\n  getFileViaSocket(id:string) {\n    return this.http.get(`api/data/video/socket/stream/${id}`)\n  }\n\n\n}\n","import { FormControl } from '@angular/forms';\n\nexport function requiredFileType( types: Array<string> ) {\n  return function ( control: FormControl ) {\n    const file = control.value;\n    let isValid = false;\n    if ( file ) {\n      const temp = file.name.split('.');\n      const extension = temp[temp.length - 1].toLowerCase();\n      types.forEach(type => {\n        if ( type.toLowerCase() == extension.toLowerCase() ) {\n          isValid = true;\n        }\n      });\n\n      if (!isValid) {\n        return {\n          requiredFileType: true\n        }\n      }\n      return null;\n    }\n\n    return null;\n  };\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n  "],"names":["RouterModule","AllVideosListComponent","NewVideoComponent","routes","path","component","redirectTo","AppRoutingModule","forRoot","useHash","imports","exports","NavigationEnd","AppComponent","constructor","appService","router","events","subscribe","event","console","log","url","activeRoute","title","subMenus","ngOnInit","selectors","decls","vars","consts","template","i0","BrowserModule","CoreModule","CdkTableModule","MatButtonModule","MatButtonToggleModule","MatDialogModule","MatMenuModule","MatProgressSpinnerModule","MatRadioModule","MatSidenavModule","MatSnackBarModule","MatTableModule","MatToolbarModule","MatTooltipModule","MatCommonModule","MatSelectModule","BrowserAnimationsModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","HeaderComponent","MatNativeDateModule","HttpClientModule","AsyncPipe","SidebarComponent","VideoStreamComponent","VideoStreamHttpComponent","FileUploadComponent","AppModule","bootstrap","declarations","MatTableDataSource","dialog","getFiles","response","dataSource","edit","id","navigateByUrl","then","selectedVideoUsingSocket","fileName","selectedFileDailog","open","data","afterClosed","result","selectedVideoUsingHttp","NG_VALUE_ACCESSOR","emitFiles","file","item","onChange","host","writeValue","value","nativeElement","registerOnChange","fn","registerOnTouched","hostBindings","ctx","provide","useExisting","multi","inputs","FormControl","FormGroup","Validators","requiredFileType","HttpEventType","required","submit","errorMessageStatus","uploadFile","toFormData","form","type","Response","body","reset","error","errorMessage","formValue","formData","FormData","key","Object","keys","append","fb","route","options","group","bottom","fixed","top","isActiveMenu","menuIndex","MAT_DIALOG_DATA","io","socket","window","origin","ngAfterViewInit","on","startStreaming","videoBlob","Blob","videoStream","URL","createObjectURL","videoElementRef","src","progress","undefined","emit","ngOnDestroy","disconnect","SOCKET_EVENT","VIDEO","viewQuery","parentModule","Error","AppService","http","get","post","reportProgress","observe","getFile","getFileViaSocket","factory","providedIn","types","control","isValid","temp","name","split","extension","length","toLowerCase","forEach","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}